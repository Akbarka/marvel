{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/loader.gif","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homePage","urls","wiki","comics","items","Spinner","style","display","justifyContent","alignItems","src","loader","alt","ErrorMessage","width","height","objectFit","margin","img","paddingBottom","fontSize","fontWeight","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemsRef","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","myRef","React","createRef","arr","i","tabIndex","e","props","onCharSelected","onKeyPress","key","logRef","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","length","index","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9aa45ed.chunk.js","sourcesContent":["import \"./appHeader.scss\";\n\nconst AppHeader = () => {\n  return (\n    <header className=\"app__header\">\n      <h1 className=\"app__title\">\n        <a href=\"#\">\n          <span>Marvel</span> information portal\n        </a>\n      </h1>\n      <nav className=\"app__menu\">\n        <ul>\n          <li>\n            <a href=\"#\">Characters</a>\n          </li>\n          /\n          <li>\n            <a href=\"#\">Comics</a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","class MarvelService {\n  _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  _apiKey = \"apikey=38b070ade7dd3594f3f8ffe4805143a2\";\n  _baseOffset = 210\n\n  getResource = async (url) => {\n    let res = await fetch(url);\n\n    if (!res.ok) {\n      throw new Error(`Could no fetch ${url}, status: ${res.status}`);\n    }\n    return await res.json();\n  };\n\n  getAllCharacters = async (offset = this._baseOffset) => {\n    const res = await this.getResource(\n      `${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`\n    );\n    return res.data.results.map(this._transformCharacter);\n  };\n\n  getCharacter = async (id) => {\n    const res = await this.getResource(\n      `${this._apiBase}characters/${id}?${this._apiKey}`\n    );\n    return this._transformCharacter(res.data.results[0]);\n  };\n\n  _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : `There is no description for this character 😢`,\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homePage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n}\n\nexport { MarvelService };\n","export default __webpack_public_path__ + \"static/media/loader.c42ba7a5.gif\";","import loader from \"../../resources/img/loader.gif\";\n\nconst Spinner = () => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n      <img src={loader} alt=\"Loading..\"></img>\n    </div>\n  );\n};\n\nexport { Spinner };\n","export default __webpack_public_path__ + \"static/media/error.8c0adaec.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <div>\n      <img\n        style={{\n          display: \"block\",\n          width: \"250px\",\n          height: \"250px\",\n          objectFit: \"contain\",\n          margin: \"0 auto\",\n        }}\n        src={img}\n        alt=\"Oopss... Error\"\n      />\n      <p\n        style={{\n          display: \"table\",\n          margin: \"0 auto\",\n          paddingBottom: \"15px\",\n          fontSize: \"20px\",\n          fontWeight: 'bold'\n        }}\n      >\n        Error..\n      </p>\n    </div>\n  );\n};\n\nexport { ErrorMessage };\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import React, { Component } from \"react\";\nimport { MarvelService } from \"../../services/MarvelService\";\nimport { Spinner } from \"../spinner/Spinner\";\nimport { ErrorMessage } from \"../errorMessage/ErrorMessage\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport \"./randomChar.scss\";\n\nclass RandomChar extends Component {\n  state = {\n    char: {},\n    loading: true,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n    // this.interval = setInterval(() => {\n    //   this.updateChar()\n    // }, 3000);\n  }\n\n  componentWillUnmount() {\n    // clearInterval(this.interval)\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({ char, loading: false });\n  };\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true,\n    });\n  };\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.onCharLoading()\n    this.marvelService\n      .getCharacter(id)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { char, loading, error } = this.state;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"randomchar\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <div className=\"randomchar__static\">\n          <p className=\"randomchar__title\">\n            Random character for today!\n            <br />\n            Do you want to get to know him better?\n          </p>\n          <p className=\"randomchar__title\">Or choose another one</p>\n          <button\n            onClick={this.updateChar}\n            className=\"button button__main\"\n          >\n            <div className=\"inner\">try it</div>\n          </button>\n          <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homePage, wiki } = char;\n  let imgStyle = {'objectFit' : 'cover'}\n  if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {\n      'objectFit': 'contain'\n    }\n  }\n  return (\n    <div className=\"randomchar__block\">\n      <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homePage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import React from 'react'\nimport { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport { MarvelService } from \"../../services/MarvelService\";\nimport { Spinner } from \"../spinner/Spinner\";\nimport { ErrorMessage } from \"../errorMessage/ErrorMessage\";\nimport \"./charList.scss\";\n\nclass CharList extends Component {\n  state = {\n    charList: [],\n    loading: true,\n    error: false,\n    newItemLoading: false,\n    offset: 210,\n    charEnded: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.onRequest();\n    this.myRef = React.createRef()\n  }\n\n  onRequest = (offset) => {\n    this.onCharListLoading();\n    this.marvelService\n      .getAllCharacters(offset)\n      .then(this.onCharListLoaded)\n      .catch(this.onError);\n  };\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true,\n    });\n  };\n\n  onCharListLoading = () => {\n    this.setState({\n      newItemLoading: true,\n    });\n  };\n\n  onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList < 9) {\n      ended = true;\n    }\n\n    this.setState(({ offset, charList }) => ({\n      charList: [...charList, ...newCharList],\n      loading: false,\n      newItemLoading: false,\n      offset: offset + 9,\n      charEnded: ended,\n    }));\n  };\n\n  itemsRef = []\n\n  setRef = (ref) => {\n    this.itemsRef.push(ref)\n  }\n\n  focusOnItem = (id) => {\n    this.itemsRef.forEach(item => item.classList.remove('char__item_selected'))\n    this.itemsRef[id].classList.add('char__item_selected')\n    this.itemsRef[id].focus()\n  }\n\n  renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"contain\" };\n      }\n\n      return (\n        <li\n          key={item.id}\n          tabIndex={0}\n          id={item.id}\n          onClick={(e) => {\n            this.props.onCharSelected(item.id)\n            this.focusOnItem(i)\n          }}\n          onKeyPress={(e) => {\n            if(e.key === '' || e.key === 'Enter') {\n              this.props.onCharSelected(item.id)\n              this.focusOnItem(i)\n            }\n          }}\n          className=\"char__item\"\n          ref={this.setRef}\n        >\n          <img onClick={this.logRef} src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  render() {\n    const { loading, error, charList, offset, newItemLoading, charEnded } = this.state;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? this.renderItems(charList) : null;\n\n    return (\n      <div className=\"char__list\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <button\n          disabled={newItemLoading}\n          style={{ display: charEnded ? \"none\" : \"block\" }}\n          onClick={() => this.onRequest(offset)}\n          className=\"button button__main button__long\"\n        >\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    );\n  }\n}\n\nCharList.propTypes = {\n  onCharListLoaded: PropTypes.func\n}\n\nexport default CharList;\n","import \"./skeleton.scss\";\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">\n        Please select a character to see information\n      </p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport {Skeleton};\n","import { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport { Spinner } from \"../spinner/Spinner\";\nimport { Skeleton } from \"../skeleton/Skeleton\";\nimport { ErrorMessage } from \"../errorMessage/ErrorMessage\";\nimport { MarvelService } from \"../../services/MarvelService\";\nimport \"./charInfo.scss\";\n\nclass CharInfo extends Component {\n  state = {\n    char: null,\n    loading: false,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar = () => {\n    const { charId } = this.props;\n    if (!charId) {\n      return;\n    }\n\n    this.onCharLoading();\n\n    this.marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  onCharLoaded = (char) => {\n    this.setState({ char, loading: false });\n  };\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true,\n    });\n  };\n\n  render() {\n    const { char, loading, error } = this.state;\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"char__info\">\n        {skeleton}\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homePage, wiki, comics } = char;\n\n  let imgStyle = {'objectFit' : 'cover'}\n  if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {\n      'objectFit': 'contain'\n    }\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img style={imgStyle} src={thumbnail} alt={name} />\n        <div>\n          <div className=\"char__info-name\">{char.name}</div>\n          <div className=\"char__btns\">\n            <a href={homePage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\n        {comics.map((item, index) => {\n          if (index > 9) return\n          return (\n            <li key={index} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number\n}\n\nexport default CharInfo;\n","import { Component } from \"react\";\nimport { ErrorMessage } from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport { ErrorBoundary };\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport { ErrorBoundary } from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from \"../../resources/img/vision.png\";\n\nclass App extends Component {\n  state = {\n    selectedChar: null,\n  };\n\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader />\n        <main>\n          <ErrorBoundary>\n            <RandomChar />\n          </ErrorBoundary>\n          <div className=\"char__content\">\n            <ErrorBoundary>\n              <CharList onCharSelected={this.onCharSelected} />\n            </ErrorBoundary>\n            <ErrorBoundary>\n              <CharInfo charId={this.state.selectedChar} />\n            </ErrorBoundary>\n          </div>\n          <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}