{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","offset","setOffset","setNewItemLoading","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","className","arr","items","map","item","i","CSSTransition","classNames","timeout","to","id","src","thumbnail","alt","title","price","TransitionGroup","component","renderComics","disabled","style","display","onClick","ComicsPage","Helmet","name","content","AppBanner","width","height","objectFit","margin","img","paddingBottom","fontSize","fontWeight","request","useCallback","url","a","method","body","headers","fetch","response","ok","status","data","json","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharacter","getCharacter","getCharacterByName","_transformComics","getComics","char","description","slice","path","extension","homePage","urls","wiki","comics","language","textObjects","prices","comicsDetail","pageCount","avengers","avengersLogo"],"mappings":"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","file":"static/js/8.2a3b6ba3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { useMarvelService } from \"../../services/MarvelService\";\nimport { ErrorMessage } from \"../errorMessage/ErrorMessage\";\nimport { Spinner } from \"../spinner/Spinner\";\n\nimport \"./comicsList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process\");\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [offset, setOffset] = useState(8);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { getAllComics, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList < 8) {\n      ended = true;\n    }\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  const renderComics = (arr) => {\n    const items = arr.map((item, i) => {\n      return (\n        <CSSTransition classNames=\"comics__item\" timeout={500}>\n          <li key={i} className=\"comics__item\">\n            <Link to={`/comics/${item.id}`}>\n              <img\n                src={item.thumbnail}\n                alt=\"ultimate war\"\n                className=\"comics__item-img\"\n              />\n              <div className=\"comics__item-name\">{item.title}</div>\n              <div className=\"comics__item-price\">{item.price}</div>\n            </Link>\n          </li>\n        </CSSTransition>\n      );\n    });\n\n    return (\n      <ul className=\"comics__grid\">\n        <TransitionGroup component={null}>{items}</TransitionGroup>\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => renderComics(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        className=\"button button__main button__long\"\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n      >\n        <div className=\"inner\" onClick={() => onRequest(offset)}>\n          load more\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport { ComicsList };\n","import { Helmet } from \"react-helmet\";\nimport { ComicsList } from \"../comicsList/ComicsList\";\nimport { AppBanner } from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Page with list our comics\" />\n        <title>Comics</title>\n      </Helmet>\n      <AppBanner />\n      <ComicsList />\n    </>\n  );\n};\n\nexport default ComicsPage;\n","export default __webpack_public_path__ + \"static/media/error.8c0adaec.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <div>\n      <img\n        style={{\n          display: \"block\",\n          width: \"250px\",\n          height: \"250px\",\n          objectFit: \"contain\",\n          margin: \"0 auto\",\n        }}\n        src={img}\n        alt=\"Oopss... Error\"\n      />\n      <p\n        style={{\n          display: \"table\",\n          margin: \"0 auto\",\n          paddingBottom: \"15px\",\n          fontSize: \"20px\",\n          fontWeight: 'bold'\n        }}\n      >\n        Error..\n      </p>\n    </div>\n  );\n};\n\nexport { ErrorMessage };\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { request, clearError, process, setProcess } = useHttp();\n\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _apiKey = \"apikey=38b070ade7dd3594f3f8ffe4805143a2\";\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getCharacterByName = async (name) => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComics = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : `There is no description for this character 😢`,\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homePage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      language: comics.textObjects.language || \"en-us\",\n      price:\n        comics.prices[0].price === 0\n          ? \"not available\"\n          : `${comics.prices[0].price}$`,\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      comicsDetail: comics.urls[0].url,\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} pages`\n        : \"No information about the number of pages\",\n    };\n  };\n\n  return {\n    process,\n    clearError,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComics,\n    getComics,\n    setProcess\n  };\n};\n\nexport { useMarvelService };\n","import { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n  const [process, setProcess] = useState(\"waiting\");\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"application/json\" }\n    ) => {\n      setProcess(\"loading\");\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could no fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = response.json();\n\n        return data;\n      } catch (e) {\n        setProcess(\"error\");\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => {\n    setProcess(\"waiting\");\n  }, []);\n\n  return { request, clearError, process, setProcess };\n};\n\nexport { useHttp };\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import \"./appBanner.scss\";\nimport avengers from \"../../resources/img/Avengers.png\";\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport {AppBanner};\n"],"sourceRoot":""}